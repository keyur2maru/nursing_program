{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"title-container\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"Nursing Program Results\")], -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"container\"\n};\nconst _hoisted_3 = {\n  class: \"tab-buttons\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  class: \"search-bar\"\n};\nconst _hoisted_6 = {\n  class: \"candidates\"\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"canvas\", {\n  id: \"confetti-canvas\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CandidateTable = _resolveComponent(\"CandidateTable\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", {\n    class: _normalizeClass({\n      'dark-mode': $data.isDarkMode,\n      'app': true\n    })\n  }, [_createCommentVNode(\" Title \"), _hoisted_1, _createCommentVNode(\" Content \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Tab buttons and Theme Toggle \"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tabs, tab => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      key: tab,\n      class: _normalizeClass({\n        'active': $data.activeTab === tab\n      }),\n      onClick: $event => $data.activeTab = tab\n    }, _toDisplayString(tab) + \" Candidates\", 11 /* TEXT, CLASS, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"button\", {\n    class: \"toggle-theme\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleDarkMode && $options.toggleDarkMode(...args))\n  }, \"ðŸŒ“ Toggle Dark/Light Mode\")]), _createCommentVNode(\" Search bar \"), _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"Search by name...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.searchQuery]])]), _createCommentVNode(\" Candidates list based on active tab \"), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_CandidateTable, {\n    candidates: $options.sortedCandidates,\n    sortOptions: {\n      currentSort: $data.currentSort,\n      currentSortDir: $data.currentSortDir\n    },\n    onSort: $options.handleSort\n  }, null, 8 /* PROPS */, [\"candidates\", \"sortOptions\", \"onSort\"])])])], 2 /* CLASS */), _hoisted_7], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","id","_normalizeClass","$data","isDarkMode","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_createElementBlock","_Fragment","_renderList","tabs","tab","key","activeTab","onClick","$event","_hoisted_4","_cache","args","$options","toggleDarkMode","_hoisted_5","searchQuery","type","placeholder","_hoisted_6","_createVNode","_component_CandidateTable","candidates","sortedCandidates","sortOptions","currentSort","currentSortDir","onSort","handleSort","_hoisted_7"],"sources":["/Users/keyurmaru/Binary_Tree/Binary_Tree/nursing-college-app/src/App.vue"],"sourcesContent":["<template>\n  <div :class=\"{ 'dark-mode': isDarkMode, 'app': true }\">\n    <!-- Title -->\n    <div class=\"title-container\">\n      <h1 class=\"title\">Nursing Program Results</h1>\n    </div>\n\n    <!-- Content -->\n    <div class=\"container\">\n      <!-- Tab buttons and Theme Toggle -->\n      <div class=\"tab-buttons\">\n        <button\n          v-for=\"tab in tabs\"\n          :key=\"tab\"\n          :class=\"{'active': activeTab === tab}\"\n          @click=\"activeTab = tab\"\n        >{{ tab }} Candidates</button>\n        <button class=\"toggle-theme\" @click=\"toggleDarkMode\">ðŸŒ“ Toggle Dark/Light Mode</button>\n      </div>\n\n      <!-- Search bar -->\n      <div class=\"search-bar\">\n        <input v-model=\"searchQuery\" type=\"text\" placeholder=\"Search by name...\" />\n      </div>\n\n      <!-- Candidates list based on active tab -->\n      <div class=\"candidates\">\n        <CandidateTable\n          :candidates=\"sortedCandidates\"\n          :sortOptions=\"{ currentSort, currentSortDir }\"\n          @sort=\"handleSort\"\n        />\n      </div>\n    </div>\n  </div>\n  <canvas id=\"confetti-canvas\"></canvas>\n</template>\n\n<script>\nimport CandidateTable from './CandidateTable.vue';\nimport sortUtil from './sortUtil';\nimport confetti from 'canvas-confetti';\n\nexport default {\n  name: 'App',\n  components: {\n    CandidateTable,\n  },\n  data() {\n    return {\n      approvedCandidates: [],\n      notApprovedCandidates: [],\n      searchQuery: '',\n      activeTab: 'Selected',\n      currentSort: 'name',\n      currentSortDir: 'asc',\n      isDarkMode: false,\n      tabs: ['Selected', 'Rejected'],\n    };\n  },\n  computed: {\n    sortedCandidates() {\n      return this.sortCandidates(\n        this.activeTab === 'Selected'\n          ? this.filteredApprovedCandidates\n          : this.filteredRejectedCandidates\n      );\n    },\n    filteredApprovedCandidates() {\n      return this.filterCandidates(this.approvedCandidates);\n    },\n    filteredRejectedCandidates() {\n      return this.filterCandidates(this.notApprovedCandidates);\n    },\n  },\n  methods: {\n    toggleDarkMode() {\n      this.isDarkMode = !this.isDarkMode;\n    },\n    filterCandidates(candidates) {\n      return candidates.filter(candidate =>\n        candidate.name.toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n    },\n    handleSort({ sortKey, sortDir }) {\n      this.currentSort = sortKey;\n      this.currentSortDir = sortDir;\n    },\n    sortCandidates(candidates) {\n      // The sorting logic can be imported from an external utility file\n      return sortUtil.sortCandidates(candidates, this.currentSort, this.currentSortDir);\n    },\n    launchConfetti() {\n      const canvas = document.getElementById('confetti-canvas');\n      const myConfetti = confetti.create(canvas, { resize: true });\n      myConfetti({ particleCount: 150, spread: 70, origin: { y: 0.6 } });\n    },\n  },\n  mounted() {\n    Promise.all([\n      import('./assets/selected.json'),\n      import('./assets/rejected.json')\n    ]).then(([selectedModule, rejectedModule]) => {\n      this.approvedCandidates = selectedModule.selectedCandidates;\n      this.notApprovedCandidates = rejectedModule.rejectedCandidates;\n      this.launchConfetti();\n    }).catch(error => {\n      console.error('Error loading candidate data:', error);\n    });\n  },\n};\n</script>\n\n<style>\n#confetti-canvas {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  z-index: 9999;\n  }\n  \n.app {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  color: #333;\n  background-color: #f4f4f9;\n  transition: background-color 0.3s, color 0.3s;\n}\n\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.tab-buttons button {\n  background-color: transparent;\n  border: none;\n  padding: 1rem 2rem;\n  margin-right: 1rem;\n  font-size: 1rem;\n  border-radius: 50px;\n  transition: background-color 0.3s;\n}\n\n.tab-buttons button.active {\n  background-color: #007aff;\n  color: white;\n}\n\n.search-bar {\n  margin: 2rem 0;\n}\n\n.search-bar input {\n  width: 100%;\n  padding: 1rem;\n  border: none;\n  border-radius: 50px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.candidates {\n  background-color: white;\n  box-shadow: 0 6px 8px rgba(0, 0, 0, 0.1);\n  border-radius: 20px;\n  overflow: hidden;\n  margin-bottom: 2rem;\n}\n\ntable {\n  width: 100%;\n  border-collapse: separate;\n  border-spacing: 0;\n  margin-top: 1rem;\n}\n\nth, td {\n  text-align: left;\n  padding: 1rem;\n  border-bottom: 1px solid #eaeaea;\n}\n\nth:first-child, td:first-child {\n  border-top-left-radius: 20px;\n}\n\nth:last-child, td:last-child {\n  border-top-right-radius: 20px;\n}\n\nthead {\n  background-color: #fafafa;\n}\n\ntbody tr:hover {\n  background-color: #f0f0f0;\n}\n\n/* Dark Mode */\n.dark-mode {\n  background-color: #1c1c1e;\n  color: #f4f4f9;\n}\n\n.dark-mode .candidates {\n  background-color: #2c2c2e;\n}\n\n.dark-mode .search-bar input {\n  background-color: #3a3a3c;\n  color: #f4f4f9;\n}\n\n.dark-mode table {\n  border: 1px solid #444;\n}\n\n.dark-mode th, .dark-mode td {\n  border-bottom: 1px solid #444;\n}\n\n.dark-mode thead {\n  background-color: #3a3a3c;\n}\n\n.dark-mode tbody tr:hover {\n  background-color: #48484a;\n}\n\n.dark-mode, .dark-mode thead, .dark-mode tbody tr {\n  color: #ffffff; /* Ensure text is white in dark mode */\n}\n\n/* Apply a different background color for the active tab in dark mode */\n.dark-mode .tab-buttons button.active {\n  background-color: #005ecb; /* Darker shade of blue for better visibility in dark mode */\n}\n\n/* Ensure that non-active tabs also have visible text in dark mode */\n.dark-mode .tab-buttons button {\n  color: #ffffff; /* White text for non-active buttons */\n}\n\n.tab-buttons .toggle-theme {\n  float: right; /* Aligns the button to the right */\n  margin-right: 0; /* Removes the margin from the right side */\n  padding: 0.8rem 1.6rem; /* Smaller padding to reduce size */\n  font-size: 0.9rem; /* Smaller font size */\n  border-radius: 50px; /* Keeps consistency with the border-radius */\n  transition: background-color 0.3s; /* Smooth transition for theme change */\n  cursor: pointer; /* Changes the cursor to signify this is a clickable button */\n}\n\n.title-container {\n  text-align: center; /* Centers the title */\n  margin-top: 0; /* Adds space at the top */\n  margin-bottom: 2rem; /* Adds space at the bottom */\n}\n\n.app {\n  margin-top: 0; /* Remove if there's any top margin */\n  /* Other styles */\n}\n\n.title {\n  font-size: 2.5rem; /* Large font size for the title */\n  color: #333; /* Dark color for the text */\n  font-weight: bold; /* Makes the font bold */\n  text-transform: uppercase; /* Optional: Capitalizes all letters */\n  letter-spacing: 2px; /* Optional: Increases spacing between letters for style */\n}\n\n/* Style for the title in dark mode */\n.dark-mode .title {\n  color: #f4f4f9; /* Light color for the text in dark mode */\n}\n</style>\n"],"mappings":";gCAGIA,mBAAA,CAEM;EAFDC,KAAK,EAAC;AAAiB,I,aAC1BD,mBAAA,CAA8C;EAA1CC,KAAK,EAAC;AAAO,GAAC,yBAAuB,E;;EAItCA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAa;;;EAWnBA,KAAK,EAAC;AAAY;;EAKlBA,KAAK,EAAC;AAAY;gCAS3BD,mBAAA,CAAsC;EAA9BE,EAAE,EAAC;AAAiB;;;;6DAlC5BF,mBAAA,CAiCM;IAjCAC,KAAK,EAAAE,eAAA;MAAA,aAAiBC,KAAA,CAAAC,UAAU;MAAA;IAAA;MACpCC,mBAAA,WAAc,EACdC,UAEM,EAEND,mBAAA,aAAgB,EAChBN,mBAAA,CAyBM,OAzBNQ,UAyBM,GAxBJF,mBAAA,kCAAqC,EACrCN,mBAAA,CAQM,OARNS,UAQM,I,kBAPJC,mBAAA,CAK8BC,SAAA,QAAAC,WAAA,CAJdR,KAAA,CAAAS,IAAI,EAAXC,GAAG;yBADZJ,mBAAA,CAK8B;MAH3BK,GAAG,EAAED,GAAG;MACRb,KAAK,EAAAE,eAAA;QAAA,UAAaC,KAAA,CAAAY,SAAS,KAAKF;MAAG;MACnCG,OAAK,EAAAC,MAAA,IAAEd,KAAA,CAAAY,SAAS,GAAGF;wBAClBA,GAAG,IAAG,aAAW,+BAAAK,UAAA;kCACrBnB,mBAAA,CAAuF;IAA/EC,KAAK,EAAC,cAAc;IAAEgB,OAAK,EAAAG,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,2BAAyB,E,GAGhFf,mBAAA,gBAAmB,EACnBN,mBAAA,CAEM,OAFNwB,UAEM,G,gBADJxB,mBAAA,CAA2E;+DAA3DI,KAAA,CAAAqB,WAAW,GAAAP,MAAA;IAAEQ,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC;iDAArCvB,KAAA,CAAAqB,WAAW,E,KAG7BnB,mBAAA,yCAA4C,EAC5CN,mBAAA,CAMM,OANN4B,UAMM,GALJC,YAAA,CAIEC,yBAAA;IAHCC,UAAU,EAAET,QAAA,CAAAU,gBAAgB;IAC5BC,WAAW;MAAAC,WAAA,EAAI9B,KAAA,CAAA8B,WAAW;MAAAC,cAAA,EAAE/B,KAAA,CAAA+B;IAAc;IAC1CC,MAAI,EAAEd,QAAA,CAAAe;yFAKfC,UAAsC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}