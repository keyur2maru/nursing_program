{"ast":null,"code":"export default {\n  name: 'CandidateTable',\n  props: {\n    candidates: Array,\n    sortOptions: {\n      type: Object,\n      default: () => ({\n        currentSort: '',\n        currentSortDir: ''\n      })\n    }\n  },\n  data() {\n    return {\n      headers: [{\n        text: 'Student Name',\n        value: 'name'\n      }, {\n        text: 'TEAS Score',\n        value: 'teasScoreGreaterThan62'\n      }, {\n        text: 'Non-Science GPA',\n        value: 'nonScienceGPAGreaterThan2_5'\n      }, {\n        text: 'Science GPA',\n        value: 'scienceGPAGreaterThan3_0'\n      }, {\n        text: 'Has all Pre-Reqs?',\n        value: 'hasAllPreReqs'\n      }, {\n        text: 'Has AA/AS?',\n        value: 'hasAaAs'\n      }, {\n        text: 'Total Score',\n        value: 'totalScore'\n      }]\n    };\n  },\n  methods: {\n    requestSort(sortKey) {\n      let sortDir = 'asc';\n      if (this.sortOptions.currentSort === sortKey) {\n        sortDir = this.sortOptions.currentSortDir === 'asc' ? 'desc' : 'asc';\n      }\n      this.$emit('sort', {\n        sortKey,\n        sortDir\n      });\n    },\n    getAriaSort(column) {\n      if (this.sortOptions.currentSort === column) {\n        return this.sortOptions.currentSortDir === 'asc' ? 'ascending' : 'descending';\n      }\n      return 'none';\n    }\n  }\n};","map":{"version":3,"names":["name","props","candidates","Array","sortOptions","type","Object","default","currentSort","currentSortDir","data","headers","text","value","methods","requestSort","sortKey","sortDir","$emit","getAriaSort","column"],"sources":["/Users/keyurmaru/Binary_Tree/Binary_Tree/nursing-college-app/src/CandidateTable.vue"],"sourcesContent":["<template>\n    <div class=\"candidate-table\">\n      <table class=\"min-w-full table-auto border-collapse border border-gray-200 mt-4\">\n        <thead class=\"bg-gray-100\">\n          <tr>\n            <th\n              v-for=\"header in headers\"\n              :key=\"header.value\"\n              @click=\"requestSort(header.value)\"\n              role=\"button\"\n              :aria-label=\"`Sort by ${header.text}`\"\n              :aria-sort=\"getAriaSort(header.value)\"\n              class=\"sort-header\"\n            >\n              {{ header.text }}\n              <span v-if=\"sortOptions.currentSort === header.value\">\n                {{ sortOptions.currentSortDir === 'asc' ? '↑' : '↓' }}\n              </span>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"candidate in candidates\" :key=\"candidate.name\" class=\"hover:bg-gray-50\">\n            <td class=\"border border-gray-300 p-2\">{{ candidate.name }}</td>\n            <td class=\"border border-gray-300 p-2\">{{ candidate.scoreBreakdown.teasScoreGreaterThan62 }}</td>\n            <td class=\"border border-gray-300 p-2\">{{ candidate.scoreBreakdown.nonScienceGPAGreaterThan2_5 }}</td>\n            <td class=\"border border-gray-300 p-2\">{{ candidate.scoreBreakdown.scienceGPAGreaterThan3_0 }}</td>\n            <td class=\"border border-gray-300 p-2\">{{ candidate.scoreBreakdown.hasAllPreReqs }}</td>\n            <td class=\"border border-gray-300 p-2\">{{ candidate.scoreBreakdown.hasAaAs }}</td>\n            <td class=\"border border-gray-300 p-2\">{{ candidate.totalScore }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'CandidateTable',\n    props: {\n      candidates: Array,\n      sortOptions: {\n        type: Object,\n        default: () => ({\n          currentSort: '',\n          currentSortDir: ''\n        }),\n      },\n    },\n    data() {\n      return {\n        headers: [\n          { text: 'Student Name', value: 'name' },\n          { text: 'TEAS Score', value: 'teasScoreGreaterThan62' },\n          { text: 'Non-Science GPA', value: 'nonScienceGPAGreaterThan2_5' },\n          { text: 'Science GPA', value: 'scienceGPAGreaterThan3_0' },\n          { text: 'Has all Pre-Reqs?', value: 'hasAllPreReqs' },\n          { text: 'Has AA/AS?', value: 'hasAaAs' },\n          { text: 'Total Score', value: 'totalScore' },\n        ],\n      };\n    },\n    methods: {\n      requestSort(sortKey) {\n        let sortDir = 'asc';\n        if (this.sortOptions.currentSort === sortKey) {\n          sortDir = this.sortOptions.currentSortDir === 'asc' ? 'desc' : 'asc';\n        }\n        this.$emit('sort', { sortKey, sortDir });\n      },\n      getAriaSort(column) {\n        if (this.sortOptions.currentSort === column) {\n          return this.sortOptions.currentSortDir === 'asc' ? 'ascending' : 'descending';\n        }\n        return 'none';\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  .sort-header {\n    cursor: pointer;\n    white-space: nowrap;\n  }\n  \n  .sort-header span {\n    margin-left: 0.5rem;\n  }\n  </style>\n  "],"mappings":"AAqCE,eAAe;EACbA,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE;IACLC,UAAU,EAAEC,KAAK;IACjBC,WAAW,EAAE;MACXC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO;QACdC,WAAW,EAAE,EAAE;QACfC,cAAc,EAAE;MAClB,CAAC;IACH;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CACP;QAAEC,IAAI,EAAE,cAAc;QAAEC,KAAK,EAAE;MAAO,CAAC,EACvC;QAAED,IAAI,EAAE,YAAY;QAAEC,KAAK,EAAE;MAAyB,CAAC,EACvD;QAAED,IAAI,EAAE,iBAAiB;QAAEC,KAAK,EAAE;MAA8B,CAAC,EACjE;QAAED,IAAI,EAAE,aAAa;QAAEC,KAAK,EAAE;MAA2B,CAAC,EAC1D;QAAED,IAAI,EAAE,mBAAmB;QAAEC,KAAK,EAAE;MAAgB,CAAC,EACrD;QAAED,IAAI,EAAE,YAAY;QAAEC,KAAK,EAAE;MAAU,CAAC,EACxC;QAAED,IAAI,EAAE,aAAa;QAAEC,KAAK,EAAE;MAAa,CAAC;IAEhD,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAACC,OAAO,EAAE;MACnB,IAAIC,OAAM,GAAI,KAAK;MACnB,IAAI,IAAI,CAACb,WAAW,CAACI,WAAU,KAAMQ,OAAO,EAAE;QAC5CC,OAAM,GAAI,IAAI,CAACb,WAAW,CAACK,cAAa,KAAM,KAAI,GAAI,MAAK,GAAI,KAAK;MACtE;MACA,IAAI,CAACS,KAAK,CAAC,MAAM,EAAE;QAAEF,OAAO;QAAEC;MAAQ,CAAC,CAAC;IAC1C,CAAC;IACDE,WAAWA,CAACC,MAAM,EAAE;MAClB,IAAI,IAAI,CAAChB,WAAW,CAACI,WAAU,KAAMY,MAAM,EAAE;QAC3C,OAAO,IAAI,CAAChB,WAAW,CAACK,cAAa,KAAM,KAAI,GAAI,WAAU,GAAI,YAAY;MAC/E;MACA,OAAO,MAAM;IACf;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}